Description: Correct some typographical errors.
Forwarded: https://github.com/libarchive/libarchive/pull/1249
Author: Peter Pentchev <roam@ringlet.net>
Last-Update: 2022-03-29

--- a/libarchive/archive_string.c
+++ b/libarchive/archive_string.c
@@ -3525,7 +3525,7 @@
 
 	if (sc->to_cp == CP_C_LOCALE) {
 		/*
-		 * "C" locale special process.
+		 * "C" locale special processing.
 		 */
 		u16 = _p;
 		ll = 0;
@@ -3644,7 +3644,7 @@
 	avail = as16->buffer_length - 2;
 	if (sc->from_cp == CP_C_LOCALE) {
 		/*
-		 * "C" locale special process.
+		 * "C" locale special processing.
 		 */
 		count = 0;
 		while (count < length && *s) {
--- a/libarchive/test/test_compat_lzip.c
+++ b/libarchive/test/test_compat_lzip.c
@@ -48,7 +48,7 @@
 rm -r $dir
 }
 #
-# Make a lzip file from splitted tar file.
+# Make a lzip file from the split tar file.
 #
 name=test_compat_lzip_1
 dir="$name`date +%Y%m%d%H%M%S`.$USER"
@@ -76,7 +76,7 @@
 */
 
 /*
- * Verify our ability to read sample files compatibly with lzip.
+ * Verify our ability to read the sample files compatibly with lzip.
  *
  * In particular:
  *  * lzip will read multiple lzip streams, concatenating the output
--- a/README.md
+++ b/README.md
@@ -187,7 +187,7 @@
   libraries.  This also reduces the size of statically-linked
   binaries in environments where that matters.
 
-* The library is generally _thread safe_ depending on the platform:
+* The library is generally _thread-safe_ depending on the platform:
   it does not define any global variables of its own.  However, some
   platforms do not provide fully thread-safe versions of key C library
   functions.  On those platforms, libarchive will use the non-thread-safe
@@ -210,7 +210,7 @@
   multiple threads.  Of course, those modules are completely
   optional and you can use the rest of libarchive without them.
 
-* The library is _not_ thread aware, however.  It does no locking
+* The library is _not_ thread-aware, however.  It does no locking
   or thread management of any kind.  If you create a libarchive
   object and need to access it from multiple threads, you will
   need to provide your own locking.
--- a/libarchive/archive_read_support_format_cpio.c
+++ b/libarchive/archive_read_support_format_cpio.c
@@ -825,9 +825,9 @@
 }
 
 /*
- * NOTE: if a filename suffix is ".z", it is the file gziped by afio.
- * it would be nice that we can show uncompressed file size and we can
- * uncompressed file contents automatically, unfortunately we have nothing
+ * NOTE: if a filename suffix is ".z", it is a file gzipped by afio.
+ * it would be nice if we could show uncompressed file size and
+ * uncompress file contents automatically, unfortunately we have nothing
  * to get a uncompressed file size while reading each header. It means
  * we also cannot uncompress file contents under our framework.
  */
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1057,8 +1057,8 @@
         CMAKE_C_COMPILER_ID MATCHES "^Clang$")
       #
       # During checking iconv proto type, we should use -Werror to avoid the
-      # success of iconv detection with a warning which success is a miss
-      # detection. So this needs for all build mode(even it's a release mode).
+      # success of iconv detection with a warning, which would be a false
+      # positive.  So this is needed for all build modes, even in release mode.
       #
       SET(CMAKE_REQUIRED_FLAGS "${CMAKE_REQUIRED_FLAGS} -Werror")
     ENDIF (CMAKE_C_COMPILER_ID MATCHES "^GNU$" OR
--- a/libarchive/archive_read_support_filter_uu.c
+++ b/libarchive/archive_read_support_filter_uu.c
@@ -231,8 +231,8 @@
 		size_t nbytes_req = (*ravail+1023) & ~1023U;
 		ssize_t tested;
 
-		/* Increase reading bytes if it is not enough to at least
-		 * new two lines. */
+		/* Increase reading bytes if it is not enough for at least
+		 * two new lines. */
 		if (nbytes_req < (size_t)*ravail + 160)
 			nbytes_req <<= 1;
 
@@ -410,7 +410,7 @@
 
 		/*
 		 * Calculate a new buffer size for in_buff.
-		 * Increase its value until it has enough size we need.
+		 * Increase its value until it is enough for our needs.
 		 */
 		newsize = uudecode->in_allocated;
 		do {
@@ -487,7 +487,7 @@
 	if (uudecode->in_cnt) {
 		/*
 		 * If there is remaining data which is saved by
-		 * previous calling, use it first.
+		 * a previous call, use it first.
 		 */
 		if (ensure_in_buff_size(self, uudecode,
 		    avail_in + uudecode->in_cnt) != ARCHIVE_OK)
--- a/libarchive/archive_read_support_format_mtree.c
+++ b/libarchive/archive_read_support_format_mtree.c
@@ -392,8 +392,8 @@
 		if (len >= MAX_LINE_LEN)
 			return (-1);
 
-		/* Increase reading bytes if it is not enough to at least
-		 * new two lines. */
+		/* Increase reading bytes if it is not enough for at least
+		 * two new lines. */
 		if (nbytes_req < (size_t)*ravail + 160)
 			nbytes_req <<= 1;
 
@@ -516,7 +516,7 @@
 
 /*
  * Test whether there is a set of mtree keywords.
- * Returns the number of keyword.
+ * Returns the number of keywords.
  * Returns -1 if we got incorrect sequence.
  * This function expects a set of "<space characters>keyword=value".
  * When "unset" is specified, expects a set of "<space characters>keyword".
@@ -568,8 +568,8 @@
 				--len;
 				value = 1;
 			}
-			/* A keyword should have a its value unless
-			 * "/unset" operation. */ 
+			/* A keyword should have a value unless this is
+			 * an "/unset" operation. */ 
 			if (!unset && value == 0)
 				return (-1);
 		}
@@ -752,7 +752,7 @@
 				} else if (form_D == 1) {
 					if (!last_is_path && keywords > 0)
 						/* This this is not `form D'
-						 * and We cannot accept mixed
+						 * and we cannot accept mixed
 						 * format. */
 						break;
 				}
@@ -805,7 +805,7 @@
  * to read the entire mtree file into memory up front.
  *
  * The parsing is done in two steps.  First, it is decided if a line
- * changes the global defaults and if it is, processed accordingly.
+ * changes the global defaults and if it does, it is processed accordingly.
  * Otherwise, the options of the line are merged with the current
  * global options.
  */
--- a/doc/html/archive_read_disk.3.html
+++ b/doc/html/archive_read_disk.3.html
@@ -381,7 +381,7 @@
 archive_match_path_excluded, archive_match_time_excluded, or
 archive_match_owner_excluded, then the callback function
 specified by the _excluded_func parameter will execute. This
-function will recieve data provided to the fourth parameter,
+function will receive data provided to the fourth parameter,
 void *_client_data.</p>
 
 
@@ -390,7 +390,7 @@
 <p style="margin-left:17%;">Allows the caller to set a
 callback function during calls to archive_read_header(3) to
 filter out metadata for each entry. The callback function
-recieves the struct archive object, void* custom filter
+receives the struct archive object, void* custom filter
 data, and the struct archive_entry. If the callback function
 returns an error, ARCHIVE_RETRY will be returned and the
 entry will not be further processed.</p>
--- a/doc/man/archive_read_disk.3
+++ b/doc/man/archive_read_disk.3
@@ -299,12 +299,12 @@
 Tn archive_match_time_excluded,
 or
 Tn archive_match_owner_excluded,
-then the callback function specified by the _excluded_func parameter will execute. This function will recieve data provided to the fourth parameter, void *_client_data.
+then the callback function specified by the _excluded_func parameter will execute. This function will receive data provided to the fourth parameter, void *_client_data.
 .TP
 \fB\%archive_read_disk_set_metadata_filter_callback\fP()
 Allows the caller to set a callback function during calls to
 \fBarchive_read_header\fP(3)
-to filter out metadata for each entry. The callback function recieves the
+to filter out metadata for each entry. The callback function receives the
 Tn struct archive
 object, void* custom filter data, and the 
 Tn struct archive_entry.
--- a/doc/text/archive_read_disk.3.txt
+++ b/doc/text/archive_read_disk.3.txt
@@ -222,13 +222,13 @@
 	     calls to archive_match_path_excluded,
 	     archive_match_time_excluded, or archive_match_owner_excluded,
 	     then the callback function specified by the _excluded_func param‐
-	     eter will execute. This function will recieve data provided to
+	     eter will execute. This function will receive data provided to
 	     the fourth parameter, void *_client_data.
 
      archive_read_disk_set_metadata_filter_callback()
 	     Allows the caller to set a callback function during calls to
 	     archive_read_header(3) to filter out metadata for each entry. The
-	     callback function recieves the struct archive object, void* cus‐
+	     callback function receives the struct archive object, void* cus‐
 	     tom filter data, and the struct archive_entry.  If the callback
 	     function returns an error, ARCHIVE_RETRY will be returned and the
 	     entry will not be further processed.
--- a/doc/wiki/ManPageArchiveReadDisk3.wiki
+++ b/doc/wiki/ManPageArchiveReadDisk3.wiki
@@ -278,11 +278,11 @@
 '''archive_match_time_excluded ,''' 
 or 
 '''archive_match_owner_excluded ,''' 
-then the callback function specified by the _excluded_func parameter will execute. This function will recieve data provided to the fourth parameter, void *_client_data. 
+then the callback function specified by the _excluded_func parameter will execute. This function will receive data provided to the fourth parameter, void *_client_data. 
 </dd><dt>'''archive_read_disk_set_metadata_filter_callback'''()</dt><dd> 
 Allows the caller to set a callback function during calls to 
 [[ManPageArchiveReadHeader3]] 
-to filter out metadata for each entry. The callback function recieves the 
+to filter out metadata for each entry. The callback function receives the 
 '''struct archive''' 
 object, void* custom filter data, and the  
 '''struct archive_entry .''' 
--- a/libarchive/archive_read_disk.3
+++ b/libarchive/archive_read_disk.3
@@ -290,11 +290,11 @@
 .Tn archive_match_time_excluded ,
 or
 .Tn archive_match_owner_excluded ,
-then the callback function specified by the _excluded_func parameter will execute. This function will recieve data provided to the fourth parameter, void *_client_data.
+then the callback function specified by the _excluded_func parameter will execute. This function will receive data provided to the fourth parameter, void *_client_data.
 .It Fn archive_read_disk_set_metadata_filter_callback
 Allows the caller to set a callback function during calls to
 .Xr archive_read_header 3
-to filter out metadata for each entry. The callback function recieves the
+to filter out metadata for each entry. The callback function receives the
 .Tn struct archive
 object, void* custom filter data, and the 
 .Tn struct archive_entry .
